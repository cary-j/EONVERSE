-- Compiled with roblox-ts v2.1.0
local TS = _G[script]
local NetworkingSkip = TS.import(script, script, "middleware", "skip").Skip
local registerHandler = TS.import(script, script, "handlers").registerNetworkHandler
local NetworkingFunctionError = TS.import(script, script, "functions", "errors").NetworkingFunctionError
local Networking = {}
do
	local _container = Networking
	--[[
		*
		* Creates a new event based off the supplied types.
		* @param serverMiddleware Middleware for server events
		* @param clientMiddleware Middleware for client events
	]]
	--[[
		*
		* Creates a new function event based off the supplied types.
		* @param serverMiddleware Middleware for server events
		* @param clientMiddleware Middleware for client events
	]]
	--[[
		*
		* Connects to a global network event.
	]]
	local registerNetworkHandler = registerHandler
	_container.registerNetworkHandler = registerNetworkHandler
	--[[
		*
		* Stops networking function middleware.
	]]
	local Skip = NetworkingSkip
	_container.Skip = Skip
	--[[
		*
		* A function that generates middleware.
		* @hidden
		* @deprecated Use {@link EventMiddleware} or {@link FunctionMiddleware}
	]]
	--[[
		*
		* A function that generates an event middleware.
	]]
	--[[
		*
		* A function that generates an event middleware.
	]]
end
return {
	Networking = Networking,
	NetworkingFunctionError = NetworkingFunctionError,
}
